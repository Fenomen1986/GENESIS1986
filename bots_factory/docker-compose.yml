version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: bots_factory_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bots_factory
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - bots-factory-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d bots_factory"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: app/web/Dockerfile
    container_name: bots_factory_api
    entrypoint: /app/app/web/entrypoint.sh
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - bots-factory-net
    environment:
      - DATABASE_URL=postgresql://user:password@db/bots_factory
      - PYTHONPATH=/app

  bot:
    build:
      context: .
      dockerfile: app/bot/Dockerfile
    container_name: bots_factory_bot
    command: python app/bot/main.py
    volumes:
      - .:/app
    depends_on:
      - api
    networks:
      - bots-factory-net
    environment:
      - PYTHONPATH=/app

volumes:
  postgres_data:

networks:
  bots-factory-net:
    driver: bridge